"use client";

import { Meme } from "@/lib/db/schema";
import Image from "next/image";
import { MatchBadge } from "./match-badge";
import { Card } from "./ui/card";
import { cn } from "@/lib/utils";

export const ImageCard = ({
  image,
  similarity,
}: {
  image: Meme;
  similarity?: number;
}) => {
  const isDirectMatch = similarity === 1;

  return (
    <a 
      href={image.path} 
      target="_blank" 
      rel="noopener noreferrer"
      className={cn(
        "flex flex-col gap-3 p-5 overflow-hidden rounded-md shadow-md border border-green-400/10 transition-all",
        "bg-black/80 hover:shadow-lg hover:scale-[1.02] hover:brightness-110 group relative"
      )}
    >
      <h3 className="text-green-400 line-clamp-1 font-medium text-lg">{image.title}</h3>
      <div className="relative h-80 rounded-md overflow-hidden">
        <Image
          src={image.path}
          alt={image.title}
          className="object-cover"
          fill
        />
        
        {/* Hover overlay with metadata */}
        <div className="absolute inset-0 bg-black/70 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex flex-col justify-center p-4 text-white overflow-y-auto">
          <h4 className="text-white font-medium mb-2 text-center">Generated by GPT-4o</h4>
          <p className="text-white/90 mb-3 text-center italic">&quot;{image.description}&quot;</p>
          
          {/* Additional metadata could be displayed here if available */}
          {image.tags && (
            <div className="mt-auto">
              <p className="text-white/80 text-sm font-medium mb-1">Tags:</p>
              <div className="flex flex-wrap gap-1">
                {image.tags.split(',').map((tag: string, i: number) => (
                  <span key={i} className="bg-white/20 px-2 py-1 rounded-full text-xs">
                    {tag.trim()}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
      <div className="flex items-center justify-between">
        <p className="text-gray-300 text-sm line-clamp-1">{image.description}</p>
        {similarity !== undefined && <MatchBadge match={similarity} />}
      </div>
    </a>
  );
};
